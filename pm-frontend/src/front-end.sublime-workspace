{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "actions/organization/organization.actions.ts",
			"settings":
			{
				"buffer_size": 199,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "interfaces.ts",
			"settings":
			{
				"buffer_size": 715,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "//store was getting big so i moved it here\nimport { createStore, combineReducers, applyMiddleware, Store } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { routerReducer, routerMiddleware, push } from 'react-router-redux';\nimport { State } from './interfaces';\nimport createHistory from 'history/createBrowserHistory'\nimport * as notificationsActions from './actions/helpers/notifications.actions';\n\n\nimport * as idleMonitor from './components/idle-monitor';\nimport appReducer from './reducers/reducer';\n\nconst history = createHistory();\nconst middleware = routerMiddleware(history);\n\nconst store: Store<State> = createStore(\n    combineReducers({\n      app: appReducer,    \n      router: routerReducer,\n      idle: idleMonitor.reducer\n    }),\n    composeWithDevTools(applyMiddleware(middleware, thunk, idleMonitor.middleware))\n  );\n  \n  let oldUser: string = '';\n  store.subscribe(() => {\n    const state: State = store.getState();\n    let currentUser = state.app.user.name;\n    if(currentUser !== oldUser &&  currentUser !== '') {\n        oldUser = currentUser;     \n        store.dispatch(idleMonitor.actions.start());\n    } else if (currentUser !== oldUser) {\n        oldUser = currentUser;        \n        store.dispatch(idleMonitor.actions.stop());\n    }\n    localStorage.setItem('refreshToken', state.app.user.refreshToken);\n    localStorage.setItem('name', state.app.user.name);    \n  });\n\n  export { store, history };",
			"file": "configureStore.ts",
			"file_size": 1497,
			"file_write_time": 131588540830113168,
			"settings":
			{
				"buffer_size": 1496,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 221.0,
		"last_filter": "settings",
		"selected_items":
		[
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"package",
				"Install Package Control"
			]
		],
		"width": 501.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/nikpolik/Projects/School2017/pm-frontend",
		"/home/nikpolik/Projects/School2017/pm-frontend/src",
		"/home/nikpolik/Projects/School2017/pm-frontend/src/actions",
		"/home/nikpolik/Projects/School2017/pm-frontend/src/actions/organization"
	],
	"file_history":
	[
		"/home/nikpolik/Desktop/test.py"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "actions/organization/organization.actions.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 199,
						"regions":
						{
						},
						"selection":
						[
							[
								192,
								192
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": false,
								"indentSize": 4,
								"tabSize": 4
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 3.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "interfaces.ts",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 715,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "configureStore.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1496,
						"regions":
						{
						},
						"selection":
						[
							[
								654,
								654
							]
						],
						"settings":
						{
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "front-end.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 243.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
